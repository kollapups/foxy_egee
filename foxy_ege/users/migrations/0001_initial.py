# Generated by Django 5.1.7 on 2025-04-04 15:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('tasks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('unique_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('role', models.CharField(choices=[('student', 'Ученик'), ('teacher', 'Учитель')], default='student', max_length=10)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('teacher_code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('specialty', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='users_customuser_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='users_customuser_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('homework_type', models.CharField(choices=[('upload', 'Загрузка файлов'), ('manual', 'Выбор вручную'), ('random', 'Случайный выбор')], max_length=10)),
                ('uploaded_files', models.FileField(blank=True, null=True, upload_to='homework_files/', validators=[users.models.validate_file_size])),
                ('answers', models.JSONField(blank=True, null=True)),
                ('image_size', models.CharField(default='150', max_length=10)),
                ('students', models.ManyToManyField(related_name='received_homeworks', to=settings.AUTH_USER_MODEL)),
                ('tasks', models.ManyToManyField(blank=True, to='tasks.task')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_homeworks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HomeworkFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='homework_files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='users.homework')),
            ],
        ),
        migrations.CreateModel(
            name='StudentHomework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ожидает выполнения'), ('in_progress', 'В процессе'), ('completed', 'Завершено')], default='pending', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('student_answers', models.JSONField(blank=True, null=True)),
                ('results', models.JSONField(blank=True, null=True)),
                ('submission_file', models.FileField(blank=True, null=True, upload_to='student_submissions/', validators=[users.models.validate_submission_file_size])),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_submissions', to='users.homework')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_homeworks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_teachers', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_students', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student', 'teacher')},
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='teachers',
            field=models.ManyToManyField(related_name='students', through='users.StudentTeacher', to=settings.AUTH_USER_MODEL),
        ),
    ]
